name: Create Security Issues

on:
  workflow_dispatch:

jobs:
  create-security-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Critical XSS Vulnerabilities Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® CRITICAL: Cross-Site Scripting (XSS) Vulnerabilities',
              body: '## Priority: CRITICAL üö®\n\n### Vulnerability Description\nMultiple XSS vulnerabilities exist due to direct binding of user input without proper sanitization in form fields.\n\n### Affected Files\n- `/src/app/purchase-order/purchase-order.html` (lines 489, 492, 495, 498, 501, etc.)\n\n### Risk Assessment\n- **Severity**: Critical\n- **Impact**: Session hijacking, data theft, credential harvesting, malicious redirects\n\n### Remediation Required\n- Implement proper input sanitization\n- Add XSS protection for all form fields\n- Security tests and code review',
              labels: ['security', 'critical', 'bug']
            })

      - name: Create Information Disclosure Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üîç HIGH: Information Disclosure through Console Logging',
              body: '## Priority: HIGH üîç\n\n### Vulnerability Description\nSensitive form data is being logged to the browser console, exposing confidential business information.\n\n### Affected Files\n- `/src/app/purchase-order/purchase-order.ts` (lines 184-204)\n\n### Risk Assessment\n- **Severity**: High\n- **Impact**: Sensitive business data exposed, compliance violations\n\n### Remediation Required\n- Remove all console.log statements from production code\n- Implement proper logging service\n- Add environment-based logging controls',
              labels: ['security', 'high', 'bug']
            })

      - name: Create Missing Input Validation Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '‚ö†Ô∏è HIGH: Missing Input Validation and Business Logic Controls',
              body: '## Priority: HIGH ‚ö†Ô∏è\n\n### Vulnerability Description\nInsufficient client-side validation and missing business logic constraints allow users to enter extreme or invalid values.\n\n### Affected Files\n- `/src/app/purchase-order/purchase-order.ts` (various lines)\n\n### Risk Assessment\n- **Severity**: High\n- **Impact**: Business logic bypass, financial manipulation, data integrity issues\n\n### Remediation Required\n- Add maximum value constraints for all numeric fields\n- Implement custom business logic validators\n- Add server-side validation',
              labels: ['security', 'high', 'bug']
            })

      - name: Create Missing Authentication Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üîê HIGH: Missing Authentication and Authorization',
              body: '## Priority: HIGH üîê\n\n### Vulnerability Description\nNo authentication or authorization mechanisms are implemented, allowing unrestricted access to the application.\n\n### Risk Assessment\n- **Severity**: High\n- **Impact**: Unauthorized access, data breaches, financial fraud\n\n### Remediation Required\n- Implement user authentication system\n- Add authorization guards to routes\n- Create role-based access control',
              labels: ['security', 'high', 'enhancement']
            })

      - name: Create Missing CSRF Protection Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üõ°Ô∏è HIGH: Missing CSRF Protection',
              body: '## Priority: HIGH üõ°Ô∏è\n\n### Vulnerability Description\nNo CSRF (Cross-Site Request Forgery) protection is implemented, making the application vulnerable to unauthorized actions.\n\n### Risk Assessment\n- **Severity**: High\n- **Impact**: Malicious sites can submit purchase orders on behalf of authenticated users\n\n### Remediation Required\n- Configure CSRF protection in HTTP client\n- Implement CSRF token validation\n- Add CSRF tokens to all forms',
              labels: ['security', 'high', 'bug']
            })

      - name: Create Insecure Server Configuration Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üåê HIGH: Insecure Server Configuration',
              body: '## Priority: HIGH üåê\n\n### Vulnerability Description\nThe Express server lacks essential security configurations including security headers, rate limiting, and proper error handling.\n\n### Risk Assessment\n- **Severity**: High\n- **Impact**: Clickjacking attacks, MIME type sniffing, XSS attacks, DDoS vulnerabilities\n\n### Remediation Required\n- Install and configure helmet for security headers\n- Implement rate limiting\n- Add input sanitization middleware',
              labels: ['security', 'high', 'enhancement']
            })

      - name: Create Container Security Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üê≥ MEDIUM: Container Security Concerns',
              body: '## Priority: MEDIUM üê≥\n\n### Vulnerability Description\nThe Docker container configuration has security issues including running as root user and missing health checks.\n\n### Risk Assessment\n- **Severity**: Medium\n- **Impact**: Container escape, privilege escalation, service availability issues\n\n### Remediation Required\n- Create non-root user for container\n- Add health check endpoint\n- Implement security scanning in CI/CD',
              labels: ['security', 'medium', 'docker']
            })

      - name: Create Dependency Vulnerabilities Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üì¶ MEDIUM: Dependency Vulnerabilities',
              body: '## Priority: MEDIUM üì¶\n\n### Vulnerability Description\nnpm audit has identified vulnerable packages in the project dependencies.\n\n### Risk Assessment\n- **Severity**: Medium\n- **Impact**: Potential security vulnerabilities through third-party packages\n\n### Remediation Required\n- Run npm audit fix to resolve known vulnerabilities\n- Update vulnerable packages to secure versions\n- Implement automated dependency scanning in CI/CD',
              labels: ['security', 'medium', 'dependencies']
            })

      - name: Summary
        run: |
          echo "‚úÖ Created 8 security issues successfully!"