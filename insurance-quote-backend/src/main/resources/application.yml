spring:
  application:
    name: insurance-quote-backend
  
  # H2 Database Configuration
  datasource:
    url: jdbc:h2:mem:insurance_quote_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: password
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
  
  # H2 Console Configuration (for development)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  
  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop # Use 'validate' in production
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: false # Set to true for SQL debugging
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        generate_statistics: false
        default_batch_fetch_size: 16
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
  
  # Development Profile
  profiles:
    active: dev

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# Management and Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.insurance.quote: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    org.springframework.transaction: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}:%line] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}:%line] - %msg%n"
  file:
    name: logs/insurance-quote-backend.log
    max-size: 100MB
    max-history: 10

# Application Specific Configuration
app:
  quote:
    validity-days: 30
    quote-number-prefix: "IQ"
    default-coverage-options:
      general-liability:
        name: "General Liability"
        premium: 500.00
        description: "General liability insurance protects your business from claims of bodily injury, property damage, and personal injury."
      property:
        name: "Property"
        premium: 750.00
        description: "Property insurance covers your business property including buildings, equipment, inventory, and furniture against damage or theft."
      additional:
        name: "Additional Coverage Options"
        premium: 300.00
        description: "Additional coverage options include cyber liability, employment practices liability, and other specialized coverages."
  
  # CORS Configuration
  cors:
    allowed-origins:
      - "http://localhost:4200"
      - "http://localhost:4201"
      - "http://localhost:3000"
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - PATCH
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  h2:
    console:
      enabled: false

logging:
  level:
    com.insurance.quote: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:test_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

logging:
  level:
    com.insurance.quote: DEBUG